name: Github Actions CI/CD Workflow for ODME

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

   
  publish-job:
    runs-on: ubuntu-latest
    needs: build_test
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - run: mvn --batch-mode --update-snapshots verify
    - run: mkdir staging && cp target/*.jar staging
    - name: Check if staging/Package.jar exists
      id: check_file
      run: |
        if [ ! -f staging/Package.zip ]; then
          echo "File staging/Package.zip does not exist"
          exit 1
        fi
    - uses: actions/upload-artifact@v3
      with:
        name: Package
        path: staging

#  automate-release:
#    name: Automate GitHub Release
#    needs: publish-job
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.TOKEN }}
#        with:
#          tag_name: v${{ github.run_number }}
#          release_name: Release ${{ github.run_number }}
#          body: This is a release of the project.
#          artifacts: |
#            staging/
#          draft: false
#          prerelease: false
#
#      - name: Get upload URL
#        id: get_upload_url
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.TOKEN }}
#        with:
#          tag_name: v${{ github.run_number }}
#          release_name: Release ${{ github.run_number }}
#          body: This is a release of the project.
#          draft: false
#          prerelease: false
#
#      - name: Upload Artifact
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.TOKEN }}
#        with:
#          asset_path: staging/Package.jar
#          asset_name: Package.jar
#          asset_content_type: application/java-archive
#          upload_url: ${{ steps.get_upload_url.outputs.upload_url }}

  automate-release:
    name: Automate GitHub Release
    needs: publish-job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get upload URL
        id: get_upload_url
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: This is a release of the project.
          artifacts: |
            staging/
          draft: false
          prerelease: false

      - name: Upload Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          asset_path: staging/Package.zip
          asset_name: Package.zip
          asset_content_type: application/java-archive
          upload_url: ${{ steps.get_upload_url.outputs.upload_url }}

  build-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: publish-job
    steps:
      - uses: actions/checkout@v3
      - name: Build and push Docker image
        run: |
          docker build -f Dockerfile -t adeutou/odme-image:latest .
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push adeutou/odme-image:latest
